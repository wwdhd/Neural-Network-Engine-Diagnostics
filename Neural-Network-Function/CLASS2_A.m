function [Y,Xf,Af] = CLASS2_A(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 27-Jan-2025 06:30:36.
%
% [Y] = CLASS2_A(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx13 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.84905506094289;-0.89661207983156;-11.8900564136425;-4.27206819854083;-8.10390898832512;-1.80211090895129;-3.93907360901864;-3.41204081619662;-3.59405443833867;-1.87637380752854;-3.42536360838103;-0.0999911658899677;-5.50001194767216];
x1_step1.gain = [1.14849683430247;1.11429971627754;0.0978738766596544;0.232607625162706;0.137850789338029;0.359427209380821;0.202423161580597;0.134805288469019;0.16842991364427;0.132026007950701;0.130549013146212;10.0007123253375;0.15426243436626];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.5061499577091908009;3.3972661834875652609;-0.060470744307374139914;-2.1940793942597460742;0.60497566908090172344;10.991959479571939085;11.99543241173577357;0.78507114054461013541;-1.5309387151804831895;0.93801476573066833176];
IW1_1 = [-0.03993500474228109387 0.18725905039751439274 6.6134386013417119088 1.5409370256372365571 -1.6502289928035354105 4.231835760350267428 -2.9746524099749898085 -3.6139993374589107766 4.4397500657979849237 -2.5116740062345441764 -1.501365553755003468 -0.20544286653949669907 0.5251678203509191345;-0.57629930911471327626 0.12264076806062479408 -0.1736216223206740461 -1.7317098883904449291 -0.77546786643721432597 0.38198129962391386139 2.0691517214505021904 -0.67199807114008092146 0.34830918187207426939 2.2802099636415613659 -0.19562252934597471055 -0.11761993613340580855 1.1368108212102607801;0.26716492782476197743 0.41455459590122201163 -0.22628721223150530251 -0.73497246788598991074 1.855535041982657507 -1.689836501408181757 0.98622223221185900677 -0.404920745367931878 -0.55129488050465913496 -0.74873322234016137511 0.16075422857230572959 0.41378876727843244554 -1.8759942228275250375;-0.39320526266004374172 0.011089541054903923056 1.3790456594073401408 -1.9907868300335447298 3.6598536813537205781 0.81083981792568105007 1.271251704177459807 -1.3735210223959217757 -2.5300058598842007918 -0.26848327300826790864 -0.24326317913234768442 0.15475904696500936142 3.0332832519601984345;-0.053533410446140350381 -0.12632976866594708421 0.86187770790464957038 0.94960872640938509548 0.63833288313004654668 -0.77400363389541382286 -0.097025720476934140812 -0.19952658731816019788 2.3979412190506650404 0.40213746671558070478 0.15592390339911149644 -0.24340945087889970244 1.1396595064859584845;-0.042763131392682618426 0.72601917215422773211 -60.322270874536272345 2.5233717683654477426 -5.3043343209942275251 0.98591849173293000241 0.31720953641198174067 0.70235224627257819563 -3.382405380635261416 4.7074366050017175667 0.62120136743799214685 -0.046924054229679469652 -13.445015693715017591;0.42282872512837199608 0.10157822065388924515 2.1476660689667794735 0.68092767873616266705 3.8118733619056737183 9.1990652328197679566 -5.4689358704940982392 11.358315601398459194 -9.6467917505100082565 2.2890906797779795312 0.021784937816024085855 -0.022759847003951144684 39.017740637732103437;1.0321366020956084242 -0.42986189799503704556 -13.852439292873226506 -8.066314240499202981 21.243252551591986332 -4.4435283114318098185 4.3029051236492259491 -6.4318777046571335987 26.765168553675508178 -2.4266219268096325123 3.0975036620741622784 0.71054081745622865718 -21.146428956505474162;0.083704034830156204272 0.0043893314139915535002 -0.23647487415591830762 0.068034878750977439976 -0.51274038351064787911 0.27724089598652634781 -0.25098020129217102347 0.19328580823256671928 0.15827372069330919446 0.17306815379776097075 0.09667079840706098437 -0.0041294555679976009677 0.60424874317489762898;0.91933279682496304996 -0.80197443965756831652 0.91459893390645830014 0.015018060973470885242 0.93144351326181062944 -0.41389806897576730815 0.53587258316791031021 0.46554941534428351257 -0.037776894509090774843 -1.0649830217014990552 0.12191099820467621306 -0.35000897010089859762 -0.016754686066784860166];

% Layer 2
b2 = [-0.96723274087515687114;-0.65017233143247232796;-0.38868230977272388849;0.10809222753548017315];
LW2_1 = [-0.0048109242685839262096 -0.0025453325754159136785 -0.0041957950677210167217 -0.0014283315651420910256 -0.0070285539404655100401 0.99356466731125470115 0.0012832405557240472369 -0.99055121898570108741 0.029656452832401019454 -0.0011858419576689857577;0.0066458427257180124892 0.0050606684498099158143 -0.0062204751406620753529 0.0034652359388659889627 -0.00097752957962521976748 -0.99394877926559355164 0.98138519270885704593 -9.6497657265172051555e-05 0.34886511043867107773 -0.0026824498647502062823;-0.0037325014223110603018 -0.0043062965196940389268 0.0059173268320607680382 -0.00088187388617145742731 0.00087744629618938382518 -0.0027643974237582108477 -0.98325053300505471654 -0.0013391470060193123859 -0.39221719289258460961 0.0035602652361680434123;0.0011720808067293368021 0.0056783022594025286262 0.0031450729534423741557 -2.529772753296364099e-05 0.0063953882052359524793 0.0026725994537562260643 0.00018773176255722223704 0.9923808859828372464 0.12340886353516497542 0.0019964970901996340752];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [2;2;2;2];
y1_step1.xoffset = [0;0;0;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);

    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);

    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;

    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end