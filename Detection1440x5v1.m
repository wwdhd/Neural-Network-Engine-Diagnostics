function [Y,Xf,Af] = Detection1440x5v1(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 21-Jan-2025 20:40:53.
%
% [Y] = Detection1440x5v1(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx13 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.84905506094289;-0.89661207983156;-11.8900564136425;-4.27206819854083;-8.10390898832512;-1.80211090895129;-3.93907360901864;-3.41204081619662;-3.59405443833867;-1.87637380752854;-3.42536360838103;-0.0999911658899677;-5.50001194767216];
x1_step1.gain = [1.14849683430247;1.11429971627754;0.0978738766596544;0.232607625162706;0.137850789338029;0.359427209380821;0.202423161580597;0.134805288469019;0.16842991364427;0.132026007950701;0.130549013146212;10.0007123253375;0.15426243436626];
x1_step1.ymin = -1;

% Layer 1
b1 = [-11.084512051538906618;-41.347223592004432646;-1.0525942069129710088;2.8751662415852297094;-16.398069966191016533;0.084286286267942350792;-5.8925348935855996757;-8.0574430613322896022;-6.1743693676140276594;2.1260192798510915146];
IW1_1 = [3.9982911512377254937 6.5087215936580005149 -6.1233948520165499829 24.089113463117783454 13.904878898384394503 -11.887385323749720456 2.3464173124720058006 -19.426635625033078725 -15.527938572711144971 13.844305154498542265 6.5322378854784615143 -2.7340541072432142933 2.6056280649506748937;0.21149474863470979491 0.048562906893073604087 2.6254867154190204559 -2.2851554241108575916 18.684967724533862565 -3.3822496749969963581 8.1290557016352309461 -21.056341916132215175 3.4231803633938335807 -30.484580180593802368 -4.7834814154365945527 -0.24522130518293516754 -50.06036462703932699;-0.16548118143230733379 1.4645536228091735609 -6.1033972253161481447 17.674221291596651895 -13.52045800503279338 4.2064124704600773796 5.5903941903394214208 -8.0566002884449154919 8.3683878853869853032 -24.709092093346356478 8.4062586720242364891 2.7437449631829160523 -12.438050756873497704;9.3427820701882282606 25.824498634530073105 0.88464227440262710456 -12.218005045339957348 1.2659228377702482771 -9.8558412544665863209 -4.0406914404814253672 -5.5068390699412050893 -11.958089863598585723 -3.2495996486573615059 -4.8486706586207288794 -10.71497940841399199 9.6918570419447025444;-1.1724202647893910978 -5.0643956650134906994 22.345275593828400673 -6.1895864766630230847 4.8823486860650486818 0.72892482922176138338 8.6610010110170296826 -1.9811217334095663212 17.79910431164610074 -1.4087723105968805726 11.447136237183659802 1.6063323959710014144 -7.0693203191952749265;-0.7971739700702633602 -2.618760276892662997 -6.0951963978817715883 0.44170951230272476051 -3.2149227399630921909 -2.3697044119512478133 0.81607559819361796816 7.3111423683426206566 -8.7244537630852470045 7.389871456808697836 -0.053388756379379440076 1.8241777204375846377 5.5574477921280260873;-4.3002249975505142388 -21.118356148998660871 3.6740746382802225156 12.370233008883715797 12.865175281860455669 -10.969802723976830094 -14.619898038233909432 3.6366865683399822728 -16.439938120225356499 28.358988143580635466 2.2653843948472967007 5.1455664500602686928 -0.1196309318982036185;-26.836746383382031667 -7.6580124730427012736 -5.7907516288156406503 7.9742843640081808587 0.28797719133290672344 -10.660825989811604231 6.6099383810166534303 9.8372983222393450831 14.670761352941241284 -18.927884871002575551 3.507598071852417565 -20.246707012182231011 -0.76759638844114586043;7.5051038035271551152 -8.3897197397589753365 -1.2649368422865454598 -7.3882651166138977317 -7.4697902222819960727 -1.288213403884545416 6.9542948654294134414 17.736691651596526498 2.6452689281500632035 5.353206329951176734 1.5464817381205682167 6.3852710636240468389 17.896881367778881611;-1.3075213037405140071 -7.5666543116094038268 0.058900814307602973596 -2.9780357392802736527 -0.97831359430275555145 4.3071867904688652118 1.2039314436403796282 -2.6708305316930651685 -1.071906520118572903 0.69108591169797084497 -2.2935180274886546314 -8.7638231379919293573 -3.909183630885748606];

% Layer 2
b2 = 0.0058538778912178013325;
LW2_1 = [-0.0019717461942444572398 -0.99565264095036232206 0.0014065341972415009927 0.0048752562165772792349 0.00079033788142630803219 8.8757017360418567504e-05 0.0039070063253973117204 0.0046469534368719480136 0.0016561216655416471661 -0.001112481077547223];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);

    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);

    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;

    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end