function [Y,Xf,Af] = Isolation1440x4v1(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 21-Jan-2025 20:51:25.
%
% [Y] = Isolation1440x4v1(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx13 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.84905506094289;-0.89661207983156;-11.8900564136425;-4.27206819854083;-8.10390898832512;-1.80211090895129;-3.93907360901864;-3.41204081619662;-3.59405443833867;-1.87637380752854;-3.42536360838103;-0.0999911658899677;-5.50001194767216];
x1_step1.gain = [1.14849683430247;1.11429971627754;0.0978738766596544;0.232607625162706;0.137850789338029;0.359427209380821;0.202423161580597;0.134805288469019;0.16842991364427;0.132026007950701;0.130549013146212;10.0007123253375;0.15426243436626];
x1_step1.ymin = -1;

% Layer 1
b1 = [-13.760410497916225836;2.583044845642064935;0.0039146383846667687223;-7.2467815389634218093;1.2877881926679304314;-0.030675390786344347571;3.7577714699098376805;3.7622040021333389426;13.602903555127467072;3.672697940709793496];
IW1_1 = [0.11487240113634944461 -0.2006710070573859972 3.9668886487376791017 0.22357108556399452048 2.702536198572714099 -0.13639311704108580958 -0.089826279335996170317 -8.4432893060904596894 -1.4100257881394016035 -5.3171969860064134394 -0.46113065034659644903 -0.11016407880317091728 -14.016359311384073649;0.1752883120502446157 0.026433718080574014619 -0.63984883565349848222 -1.0489554758410246649 -0.50939287519601617049 -0.93992327634756467347 -0.88139683251456746316 1.9962027343158510462 -0.12632753324249948457 1.9580213622199422741 -0.16918545061712747524 -0.20638968828296255786 1.4274516966756296554;0.51309163532945423203 0.16916721274773707795 0.7448817542977850259 -0.10017158693128290492 -1.0677405580670287222 1.3205860484776932307 1.5367698300476919648 1.0086855289224991861 0.10289783710173855402 -0.50360260267652290356 -0.89956177984986296359 0.025234858360608968669 1.1549081143891455348;-0.13640919774060866754 -0.044111235746700443172 35.03950569548331373 -0.25401739488732671957 0.47817491912279558308 -0.078954686034900606328 -0.76484442416155040689 -2.0402070638719314033 1.8166246708407487453 -2.3318890124566626909 -1.4431420101377343546 -0.01587260526153389667 7.4799336337588711032;0.076293067349829241097 0.46067752978700166056 8.9349085301625610356 1.3669544814595560034 -13.258196097235709132 3.1269588111745623138 -1.2572592382142078193 4.3847793456345991459 -15.367636934022872452 1.2633573356811029775 -0.23231113969414401987 -0.0080846283511158203994 8.6325080758175563034;-0.42866416113296779145 -0.33087811252437371312 -4.9541975059552978422 -1.5442039828747902153 7.7222034757243127601 -2.3534967239202062572 1.1079429657149708621 -2.9994120744908130405 9.4445313093414071659 0.74804496998314573553 -0.019720573785757290752 0.11581302585021784057 -4.1133258249229687209;-0.3094038674389730792 -0.0072267089188568431335 -16.143769971642729644 0.37339370928514092896 4.0184449417612526645 -0.20879159825506177217 1.9050527948579605297 1.4031063771244243199 -0.86188494642240309762 2.2549694473598904665 0.18965470530775233038 0.06832883834756139918 -6.3204642581403271961;0.27897305269159378138 0.00369872926381129008 -0.1389761457439924186 -0.85413217176157596455 -0.97242787752246762079 -1.9080028809642985976 -1.6178525319519128089 2.3836156834681778705 0.47888236305464321196 2.7275076345140667478 0.05398730542805713073 -0.2622750079378345367 1.5581197589781921042;-0.44335191647530153292 0.11726680509479747716 -24.106447645628566789 0.33176032429671759028 -3.6403352102962833747 -5.5392920064451764972 4.3642758358433084709 7.2009689421419986743 3.5922787292473548071 7.6225424988768750723 1.018747952552844005 0.040946217479607152634 -9.0586532199232401297;0.48645980300470181845 0.089586213180933418898 -0.040613854963675005694 0.56974255916015503765 0.13050948109489945992 0.082610711015567633853 0.11003666399857575664 0.44549420199660078046 0.5279453876495256992 -0.0041472627960969198069 -0.85186661396434615323 0.41009752685440908904 0.22403809098724553062];

% Layer 2
b2 = [-0.85312945224699754387;-3.174818703992301927;2.186326940337550262;-0.15151773683555283534];
LW2_1 = [0.15183229666785955092 -0.034854877500319403349 0.00044196500120326914773 -1.2916212282627594909 1.7969796653296477018 0.79955499177769240315 -0.2928336659410737397 0.056638652033749146975 0.0010508969642336848157 -0.018680756417678689996;-3.9426741362249626555 -0.31024984070901323596 0.0093568641986760802548 1.1871401363374300963 -0.13730756231823487701 -0.13646304148330989925 1.1807689200931497098 0.63066481014070785438 -0.97322290593892979427 -1.1094634780174503774;3.7981440075103494181 0.34721459254728531674 -0.0095792886099083998652 0.12108147121965057158 0.067083132351127477966 0.064990558999494518755 -0.87217800969772363295 -0.66517538126626607475 0.97143469467665255479 0.95406175157548589461;-0.0080128046215396271645 -0.0017146960480689471887 -0.00019314455150306290973 -0.016611271166796930804 -1.7266444149804063279 -0.7279767883356820235 -0.015764969420649317666 -0.022484540696630597734 0.00073300977645120580888 0.16649140425396349863];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [2;2;2;2];
y1_step1.xoffset = [0;0;0;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);

    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);

    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;

    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end