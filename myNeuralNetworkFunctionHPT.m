function [Y,Xf,Af] = myNeuralNetworkFunctionHPT(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 09-Dec-2024 17:17:57.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx13 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.467728998446116;-0.765454557954978;-0.862982393895249;-0.726617923680114;-8.07258667552133;-1.93369960113561;-2.94246853860711;-0.687836296527042;-0.487715591472737;-0.750890242252019;-1.88593080775311;-0.0999983738116939;-5.51870946028399];
x1_step1.gain = [1.44249403654615;1.19508039502153;0.214974979312844;0.392505382574705;0.233379019822129;0.579644583105434;0.580284835738651;0.165338904254057;0.955519281572305;0.144727290574369;0.143069840987276;10.0041819242032;0.344352002176809];
x1_step1.ymin = -1;

% Layer 1
b1 = [14.750959629107459392;1.5689577148178588395;-0.66503693198088775773;0.34161781426164367081;2.4856421521830149857;0.058680115220112932795;0.068470970998886215853;-0.89246121973799019678;-5.7384791752716965973;1.619063028823658934];
IW1_1 = [0.23244611124686179182 0.21115957693315137722 1.2368170394504909293 -0.26611225139304711673 -11.816764392254039961 -1.0303996674916069409 0.75364916087539945977 4.1192907176577957529 -0.2037683089297880612 0.22818297297316680883 -0.87017595224269361776 -0.10067381470361905227 -2.4542342992328896045;0.43337071228503115661 0.79213232583975157208 0.12085567525001467137 0.46131655860024589622 0.18119633865849005261 -0.20090157271453984444 0.20556746792732008555 -0.42698639484155070933 0.32627684362282588504 -0.28004865262993366981 0.0028666792706096401802 -0.93834208481987524397 -0.70493873552595531784;0.41721554971816543489 -0.38437088049066292506 0.67374207940557417906 0.026934593114951568826 -0.43178943710687706092 -0.044564791268888480358 0.62386929211801489537 -0.62151682282646403266 0.36102251003973451216 0.21543573493084763881 -0.47299639080995348195 -0.65506318960082410285 -0.56072868207315773592;-0.55051799868482731437 -0.67976063308938161622 0.2211858945131428833 -0.72339321807784229268 -0.42416979453256237198 -0.071786614615941810036 0.25465090047308780452 -0.64157461877052934796 -0.1125457953784806675 0.38220058404290835341 -0.0048273132039286462819 -0.10245639400195698243 0.7199003683435257761;-0.13788212116599080082 0.10870312556243016955 1.1325878128231445796 0.54337900548423045954 -2.0209014629106150096 0.017953874617436707539 0.40190483465295573362 -0.69379150277582324335 -0.27335586331084804623 -0.66336751988167486083 -0.92792533293784507098 0.10630267387195259376 -1.6782231601345263261;-0.11344145259743679266 -0.75887822228898338395 -0.72067689498494447164 -0.15406702450593562359 -0.73154886657617634871 -0.31272437085334403584 0.76069180503555633432 0.039758821131458878251 0.23434048280124689101 -0.54247128695494617467 -0.059616246105730137661 -0.26237844642461310984 -0.11631454427803955554;0.42612168244704740072 -0.36120251542553999391 -0.45999087639138608319 0.14950993605455331625 0.22781734555073684945 -0.12290367455245389261 0.29497295889871166796 0.0071359952245747329536 0.29580675243016946174 0.33904913113893969667 -0.50047806823184071146 -0.068655531141126102668 0.091111101797600430041;-0.24306713605899071817 0.28235396951961544421 -0.40401706082297128564 0.13035183519427709364 -0.082989359740078399996 0.56883911406338261152 -0.29511292735007077503 0.6858722148921988504 -0.10925025003264154932 -0.027462810611156955598 0.76493632115864595988 -0.80361937806164673859 -0.46589092934984471794;0.15680582261556974544 0.83020173361929217037 -3.8558096212308270445 2.4829834977643461258 0.46794056915184567558 0.84744943492076540981 -1.2763157540885936569 -0.67413809609355990204 -0.72325724772451760458 1.4157724499937300866 -3.2431196976946732313 1.0968569562293695174 -0.33615859313118690022;0.25803291452423404717 -0.44934466107742609964 0.74847267343073453638 0.44635527057618645808 0.19002336860297625032 -0.44185026587303127821 0.24590461154606887972 -0.28413687164777423622 0.1063350534767640021 -0.22047709912305454849 -0.6630524160967533609 -0.88903703757958540965 0.47331470483029669527];

% Layer 2
b2 = 2.8854285355767306243;
LW2_1 = [1.1986078992049262748 -0.034293175734510412955 0.029730877797220896241 -0.011801495942228262814 -0.28738203179512344931 0.0054892090768991919775 -0.023867346686416462953 -0.0029073973597810651159 2.7726172222159859437 0.0057612150487185292969];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);

    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);

    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;

    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end